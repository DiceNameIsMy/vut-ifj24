.IFJcode24

CREATEFRAME # Create an initial frame for calling the main function
PUSHFRAME

CALL main
POPFRAME # Get rid of the frame

JUMP endProgram # Finish the program execution

# Expects:
# - LF@number
# - LF@string
# Returns: 
#   A return value is pushed on the stack. 
#   If return value is not scpeficied, nothing is pushed.
LABEL func
    # Define local variables
    DEFVAR LF@v1

    # Useful code
    LABEL loop
    JUMPIFEQ end LF@number int@0

    EQ LF@v1 LF@number int@3
    JUMPIFEQ not_early_return LF@v1 bool@false

    RETURN

    LABEL not_early_return

    WRITE LF@string
    SUB LF@number LF@number int@1

    JUMP loop

    LABEL end
    # End useful code

    RETURN

LABEL if_statements
    # To generate an if statement with null binding: if (a) |b| { ... }
        DEFVAR LF@a
        DEFVAR LF@tmp
        DEFVAR LF@tmp2
        DEFVAR LF@b

        # Compare type with nil
        TYPE LF@tmp LF@a
        EQ LF@tmp2 LF@tmp string@nil

        # Execute an if check
        JUMPIFEQ condition_is_false LF@tmp2 bool@false
        
        # Export value to b before running the block
        MOVE LF@b LF@a

        # { ... }

        LABEL condition_is_false

    # To generate an if statement with else: if (x) { ... } else { ... }
        DEFVAR LF@x
        MOVE LF@x bool@true
        JUMPIFEQ else_branch LF@x bool@false

        # { ... }
        WRITE string@Running\032useful\032code(if)...\010

        JUMP end_if
        LABEL else_branch

        # { ... }
        WRITE string@Running\032useful\032code(else)...\010

        LABEL end_if

    RETURN


LABEL main
    # Given 2 strings,
    DEFVAR LF@x
    DEFVAR LF@y
    MOVE LF@x string@hello
    MOVE LF@y string@hello

    # Here's how to compare them
    DEFVAR LF@z
    EQ LF@z LF@x LF@y

    WRITE string@Comparison\032result:\032
    WRITE LF@z
    WRITE string@\010

    # Define a variable
    DEFVAR LF@magic_number
    MOVE LF@magic_number int@5

    # Create TF frame for function parameters
    CREATEFRAME

    # Set function parameters
    DEFVAR TF@number
    MOVE TF@number LF@magic_number
    DEFVAR TF@string
    MOVE TF@string string@Hello\032World!\010

    # Call function
    PUSHFRAME # Move TF to LF as that's what a function expects
    CALL func
    POPFRAME # Get rid of the function's local frame

    # Call function
    PUSHFRAME # Move TF to LF as that's what a function expects
    CALL if_statements
    POPFRAME # Get rid of the function's local frame

    # Main function is special: it does not have a return at the end.
    RETURN

LABEL endProgram